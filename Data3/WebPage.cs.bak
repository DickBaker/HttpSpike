namespace Infrastructure.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public class WebPage : IEquatable<WebPage>
    {
        public WebPage() { }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public WebPage(string url, string draftFilespec = null, string filespec = null)
        {
            Url = url;                                  // caller must present as absolute, e.g. by convert(base,relative)
            DraftFilespec = draftFilespec;
            Filespec = filespec;
        }

        [Key]
        public int PageId { get; set; }

        public int? HostId { get; set; }

        [Required]
        [StringLength(450)]
        public string Url { get; set; }

        [StringLength(511)]
        public string DraftFilespec { get; set; }

        [StringLength(511)]
        public string Filespec { get; set; }

        /// <summary>
        /// null means WebPages_trIU will determine extn then update from Host.IsXXX setting default
        /// </summary>
        public bool? NeedDownload { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<WebPage> ConsumeFrom { get; set; } = new HashSet<WebPage>();

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<WebPage> SupplyTo { get; set; } = new HashSet<WebPage>();
    }
}
